apply plugin:'java'
//apply plugin: 'eu.rekisoft.pojobooster'

//noinspection GroovyAssignabilityCheck
jar {
    manifest {
        attributes 'Manifest-Version': '1.0',
                'Main-Class': 'eu.rekisoft.java.pojobooster.Test'
    }
}

configurations {
    provided
    compile.extendsFrom provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
        // TODO this DSL should be added by the gradle plugin
        java {
            srcDir "src/generated"
        }
    }
}

task copyLibs(type: Copy) {
    from configurations.compile
    into 'build/libs'
}

// TODO catch the exception and help the user to find out what went wrong
task testPrecompiler {
    // Invoke jtreg
    task jtreg(dependsOn:jar) << {
        group = "Verification"
        javaexec {
            main="-jar";
            args = [
                    "libs/jtreg.jar",
                    "-w:build/tmp",
                    "-r:build/reports/jtreg",
                    "."
            ]
            standardOutput = org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM
        }
    }
    jtreg.dependsOn copyLibs
    dependsOn jtreg
    group = "Verification"
}

//noinspection GroovyAssignabilityCheck
//*
dependencies {
    compile project(':annotations')
    compileOnly project(':preprocessor')
    provided 'com.google.android:android:4.1.1.4'
    provided 'com.google.android:annotations:4.1.1.4'
    provided 'com.android.databinding:baseLibrary:2.2.0-alpha5'
}

task deleteGeneratedCode(type: Delete) {
    delete "src/generated"
}

if (project.tasks.findByName('clean')) {
    project.tasks.getByName('clean').dependsOn project.deleteGeneratedCode
}
//*/