apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply from: '../coverage.gradle'

configurations {
    provided
    compile.extendsFrom provided
}
sourceSets {
    main { compileClasspath += configurations.provided }
    test.java.srcDirs += '../unittests/src/shared/java/'
}
dependencies {
    provided 'org.robolectric:android-all:6.0.0_r1-robolectric-0'
    provided 'com.android.support:support-annotations:24.1.1'
    provided 'com.squareup:javapoet:1.7.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
    testCompile 'org.powermock:powermock-module-junit4-rule-agent:1.6.5'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.5'
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'eu.rekisoft.pojobooster'
            artifactId 'annotations'
            version project.libVersion

            from components.java

            pom.withXml {
                def node = asNode()
                def oldDep = node.dependencies
                node.remove(oldDep)
                def newDep = node.appendNode("dependencies")
                oldDep.dependency[0].scope*.value = 'provided'
                oldDep.dependency[2].scope*.value = 'provided'
                newDep.append(oldDep.dependency[0])
                newDep.append(oldDep.dependency[2])
            }
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}

// Bintray

//version = libraryVersion

//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())

if(project.hasProperty('bintray.user') && false) {
    bintray {
        user = project.getProperty("bintray.user")
        key = project.getProperty("bintray.apikey")

        configurations = ['archives']
        pkg {
            repo = 'https://github.com/rekire/PojoBooster'
            name = bintrayName
            desc = libraryDescription
            websiteUrl = siteUrl
            vcsUrl = 'https://github.com/rekire/PojoBooster'
            licenses = allLicenses
            publish = true
            publicDownloadNumbers = true
            version {
                desc = libraryDescription
                gpg {
                    sign = true //Determines whether to GPG sign the files. The default is false
                    passphrase = project.getProperty("bintray.gpg.password")
                    //Optional. The passphrase for GPG signing'
                }
            }
        }
    }
}
sourceCompatibility = "1.7"
targetCompatibility = "1.7"