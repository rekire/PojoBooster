/*
 *    Copyright (C) 2016 Bj√∂rn Quentin
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *      http://www.apache.org/licenses/LICENSE-2.0
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/*

 Generate Coverage Report with

 ..\gradlew clean jacocoinstrument testDebugUnitTest jacocoreport

*/
configurations {
    antDeps
}

dependencies {
    antDeps 'org.jacoco:org.jacoco.agent:0.7.7.201606060606'
    antDeps 'org.jacoco:org.jacoco.ant:0.7.7.201606060606'
}

task(jacocoinstrument) << {
    ant {
        taskdef(name: 'jacocoinstrument', classname: 'org.jacoco.ant.InstrumentTask') {
            //classpath path: "${rootDir}/lib/jacocoant.jar"
            classpath path: configurations.antDeps.asPath
        }

        jacocoinstrument(destdir: "${rootDir}/preprocessor/build/intermediates/jacocoinstrumented") {
            fileset(dir: "${rootDir}/preprocessor/build/intermediates/classes/debug/")
        }
    }
}

task(jacocoreport) << {
    ant {
        taskdef(name: 'jacoco_report', classname: 'org.jacoco.ant.ReportTask') {
            //classpath path: "${rootDir}/lib/jacocoant.jar"
            classpath path: configurations.antDeps.asPath
        }

        mkdir dir: "${rootDir}/build/reports/coverage"

        jacoco_report {
            executiondata {
                fileset(dir: "${rootDir}") {
                    include(name: '**/jacoco.exec')
                }
            }

            structure(name: 'preprocessor') {

                classfiles {
                    fileset (dir: "${rootDir}/preprocessor/build/intermediates/classes/debug"){
                        exclude(name: '**/lib/**')
                    }
                }

                sourcefiles(encoding: 'UTF8') {
                    fileset dir: "${rootDir}/preprocessor/src/main/java"
                }
            }

            xml  destfile: "${rootDir}/build/reports/coverage/jacoco.xml"
            html destdir: "${rootDir}/build/reports/coverage"
        }
    }
}


/*
android {
    testOptions {
        unitTests.all {
            jvmArgs "-Djacoco-agent.destfile=${rootDir}/build/jacoco.exec"

            def myCp
            myCp = project.files("${rootDir}/plugin/build/intermediates/jacocoinstrumented/", configurations.antDeps.asPath, classpath)
            classpath = myCp
        }
    }
}//*/
